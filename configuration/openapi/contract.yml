openapi: 3.0.0
# Added by API Auto Mocking Plugin
servers:
  - description: SwaggerHub API Auto Mocking
    url: https://virtserver.swaggerhub.com/RugalBernstein/template/1.0.0

info:
  description: This is a simple API
  version: 1.0.0
  title: Simple Inventory API
  # put the contact info for your development or API team
  contact:
    email: rugal.bernstein.0@gmail.com
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
#  ----------------------------------------------------------

# tags are used for organizing operations
tags:
- name: student
  description: Student related operations
- name: course
  description: Course related operations
- name: registration
  description: Registration related operations

#  ----------------------------------------------------------

components:
  schemas:
    NewStudent:
      type: object
      properties:
        name:
          type: string
          example: Rugal Bernstein
    Student:
      type: object
      allOf:
        - $ref: '#/components/schemas/NewStudent'
        - properties:
            sid:
              description: Id of student
              type: integer
              example: 1
      required:
        - sid
    NewCourse:
      type: object
      properties:
        name:
          type: string
    Course:
      type: object
      allOf:
        - $ref: '#/components/schemas/NewCourse'
        - properties:
            cid:
              description: Id of course
              type: integer
              example: 1
      required:
        - cid
    NewRegistration:
      type: object
      properties:
        cid:
          type: integer
        sid:
          type: integer
        grade:
          type: integer
      required:
        - cid
        - sid
    Registration:
      type: object
      allOf:
        - $ref: '#/components/schemas/NewRegistration'
        - properties:
            rid:
              description: Id of registration
              type: integer
              example: 1
      required:
        - rid
  
    Response204:
      description:  Resource deleted
    Response400:
      description:  Bad request
    Response401:
      description:  Request not authenticated
    Response403:
      description:  Request not authorized
    Response404:
      description:  Resource not found
    Response405:
      description:  Request method not found
    Response406:
      description:  Response representation not negotiable
    Response409:
      description:  Resource conflicted


#  ----------------------------------------------------------


paths:
  /student/{sid}:
    parameters:
      - in: path
        name: sid
        description: Student Id
        required: true
        schema:
          type: integer
    get:
      tags:
        - student
      summary: Get student
      operationId: getStudent
      responses:
        200:
          description: Student got
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Student'
        401:
          $ref: '#/components/schemas/Response401'
        403:
          $ref: '#/components/schemas/Response403'
        404:
          $ref: '#/components/schemas/Response404'
        405:
          $ref: '#/components/schemas/Response405'
        406:
          $ref: '#/components/schemas/Response406'
    put:
      tags:
        - student
      summary: Update student
      operationId: updateStudent
      description: |
        Update student by posting JSON.
      requestBody:
        description: Student to be updated
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Student'

      responses:
        200:
          description: Student updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Student'
        400:
          $ref: '#/components/schemas/Response400'
        401:
          $ref: '#/components/schemas/Response401'
        403:
          $ref: '#/components/schemas/Response403'
        404:
          $ref: '#/components/schemas/Response404'
        405:
          $ref: '#/components/schemas/Response405'
        406:
          $ref: '#/components/schemas/Response406'
    delete:
      tags:
        - student
      summary: Delete student
      operationId: deleteStudent
      responses:
        204:
          $ref: '#/components/schemas/Response204'
        401:
          $ref: '#/components/schemas/Response401'
        403:
          $ref: '#/components/schemas/Response403'
        404:
          $ref: '#/components/schemas/Response404'
        405:
          $ref: '#/components/schemas/Response405'
        406:
          $ref: '#/components/schemas/Response406'
  /student:
    post:
      tags:
        - student
      summary: Create student
      operationId: createStudent
      description: |
        Create student by posting JSON.
      requestBody:
        description: Student to be created
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewStudent'
      responses:
        201:
          description: Student created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Student'
        400:
          $ref: '#/components/schemas/Response400'
        401:
          $ref: '#/components/schemas/Response401'
        403:
          $ref: '#/components/schemas/Response403'
        405:
          $ref: '#/components/schemas/Response405'
        406:
          $ref: '#/components/schemas/Response406'
        409:
          $ref: '#/components/schemas/Response409'
#  --------------------------------
  /course/{cid}:
    parameters:
      - in: path
        name: cid
        description: Course Id
        required: true
        schema:
          type: integer
    get:
      tags:
        - course
      summary: Get course
      operationId: getCourse
      responses:
        200:
          description: Course got
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Course'
        401:
          $ref: '#/components/schemas/Response401'
        403:
          $ref: '#/components/schemas/Response403'
        404:
          $ref: '#/components/schemas/Response404'
        405:
          $ref: '#/components/schemas/Response405'
        406:
          $ref: '#/components/schemas/Response406'
    put:
      tags:
        - course
      summary: Update course
      operationId: updateCourse
      description: |
        Update course by posting JSON.
      requestBody:
        description: Course to be updated
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Course'
      responses:
        200:
          description: Course updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Course'
        400:
          $ref: '#/components/schemas/Response400'
        401:
          $ref: '#/components/schemas/Response401'
        403:
          $ref: '#/components/schemas/Response403'
        404:
          $ref: '#/components/schemas/Response404'
        405:
          $ref: '#/components/schemas/Response405'
        406:
          $ref: '#/components/schemas/Response406'
    delete:
      tags:
        - course
      summary: Delete course
      operationId: deleteCourse
      responses:
        204:
          $ref: '#/components/schemas/Response204'
        401:
          $ref: '#/components/schemas/Response401'
        403:
          $ref: '#/components/schemas/Response403'
        404:
          $ref: '#/components/schemas/Response404'
        405:
          $ref: '#/components/schemas/Response405'
        406:
          $ref: '#/components/schemas/Response406'
  /course:
    post:
      tags:
        - course
      summary: Create course
      operationId: createCourse
      description: |
        Create course by posting JSON.
      requestBody:
        description: Course to be created
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewCourse'
      responses:
        201:
          description: Course created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Course'
        400:
          $ref: '#/components/schemas/Response400'
        401:
          $ref: '#/components/schemas/Response401'
        403:
          $ref: '#/components/schemas/Response403'
        405:
          $ref: '#/components/schemas/Response405'
        406:
          $ref: '#/components/schemas/Response406'
        409:
          $ref: '#/components/schemas/Response409'
#  --------------------------------
  /registration/{rid}:
    parameters:
      - in: path
        name: rid
        description: Registration Id
        required: true
        schema:
          type: integer
    get:
      tags:
        - registration
      summary: Get registration
      operationId: getRegistration
      responses:
        200:
          description: Registration got
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Registration'
        401:
          $ref: '#/components/schemas/Response401'
        403:
          $ref: '#/components/schemas/Response403'
        404:
          $ref: '#/components/schemas/Response404'
        405:
          $ref: '#/components/schemas/Response405'
        406:
          $ref: '#/components/schemas/Response406'
    put:
      tags:
        - registration
      summary: Update registration
      operationId: updateRegistration
      description: |
        Update registration by posting JSON.
      requestBody:
        description: Registration to be updated
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Registration'
      responses:
        200:
          description: Registration updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Registration'
        400:
          $ref: '#/components/schemas/Response400'
        401:
          $ref: '#/components/schemas/Response401'
        403:
          $ref: '#/components/schemas/Response403'
        404:
          $ref: '#/components/schemas/Response404'
        405:
          $ref: '#/components/schemas/Response405'
        406:
          $ref: '#/components/schemas/Response406'
    delete:
      tags:
        - registration
      summary: Delete registration
      operationId: deleteRegistration
      responses:
        204:
          $ref: '#/components/schemas/Response204'
        401:
          $ref: '#/components/schemas/Response401'
        403:
          $ref: '#/components/schemas/Response403'
        404:
          $ref: '#/components/schemas/Response404'
        405:
          $ref: '#/components/schemas/Response405'
        406:
          $ref: '#/components/schemas/Response406'
  /registration:
    post:
      tags:
        - registration
      summary: Create registration
      operationId: createRegistration
      description: |
        Create registration by posting JSON.
      requestBody:
        description: Registration to be updated
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewRegistration'
      responses:
        201:
          description: Registration created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Registration'
        400:
          $ref: '#/components/schemas/Response400'
        401:
          $ref: '#/components/schemas/Response401'
        403:
          $ref: '#/components/schemas/Response403'
        405:
          $ref: '#/components/schemas/Response405'
        406:
          $ref: '#/components/schemas/Response406'
        409:
          $ref: '#/components/schemas/Response409'
#  ----------------------------------------------------------
